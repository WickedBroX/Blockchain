name: Collect Worker Logs
on:
  workflow_dispatch:
    inputs:
      env:
        description: "GitHub Environment"
        required: true
        default: production
      lines:
        description: "Lines per unit"
        required: true
        default: "400"

jobs:
  collect:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    steps:
      - name: Assert environment bindings (presence only)
        run: |
          set -euo pipefail

          export SSH_HOST="${{ secrets.SSH_HOST }}"
          export SSH_USER="${{ secrets.SSH_USER }}"
          export SSH_PRIVATE_KEY="${{ secrets.SSH_PRIVATE_KEY }}"
          export SSH_PORT="${{ secrets.SSH_PORT }}"

          echo "Verifying SSH bindings for environment '${{ inputs.env }}'..."

          require_binding() {
            local name="$1"
            if [ -z "${!name:-}" ]; then
              echo "::error::Missing required SSH binding '$name' for environment '${{ inputs.env }}'"
              exit 1
            fi
            echo "✔ Required binding '$name' is present."
          }

          optional_binding() {
            local name="$1"
            if [ -z "${!name:-}" ]; then
              echo "ℹ Optional binding '$name' not provided for environment '${{ inputs.env }}'."
            else
              echo "✔ Optional binding '$name' is present."
            fi
          }

          require_binding SSH_HOST
          require_binding SSH_USER
          require_binding SSH_PRIVATE_KEY
          optional_binding SSH_PORT

      - name: SSH: dump worker logs to files
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT != '' && secrets.SSH_PORT || '22' }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          command_timeout: 15m
          script: |
            set -euo pipefail
            LINES="${{ inputs.lines }}"
            OUTDIR="$HOME/worker-logs"
            rm -rf "$OUTDIR" && mkdir -p "$OUTDIR"

            systemctl list-units 'explorertoken-chain@*.service' --no-legend --no-pager \
              | awk '{print $1}' | sed 's/.service$//' \
              | while read -r unit; do
                  echo "Collecting $unit ..."
                  journalctl -u "$unit" -n "$LINES" --no-pager > "$OUTDIR/${unit}.log" || true
                done

            ls -la "$OUTDIR"

      - name: SCP: retrieve logs
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT != '' && secrets.SSH_PORT || '22' }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "worker-logs/*"
          target: "./"

      - name: Upload logs artifact
        uses: actions/upload-artifact@v4
        with:
          name: worker-logs
          path: worker-logs
