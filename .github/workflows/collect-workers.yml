name: Collect Worker Logs

on:
  workflow_dispatch:
    inputs:
      env:
        description: "GitHub Environment"
        required: true
        default: production
      lines:
        description: "Lines per unit"
        required: true
        default: "400"

jobs:
  collect:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    steps:
      - name: Assert environment bindings (presence only)
        shell: bash
        env:
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_PORT: ${{ secrets.SSH_PORT }}
        run: |
          check() { local k="$1"; local v="${!k-}"; [ -n "$v" ] && echo "::notice title=$k::SET" || { echo "::error title=$k::MISSING"; MISSING=1; }; }
          MISSING=0
          echo "Asserting Environment: ${{ inputs.env }}"
          check SSH_HOST; check SSH_USER; check SSH_PRIVATE_KEY
          echo "Optional:"; check SSH_PORT
          [ "$MISSING" -eq 0 ] || { echo "Missing required secrets"; exit 1; }

      - name: SSH: dump worker logs to files
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT != '' && secrets.SSH_PORT || '22' }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          command_timeout: 15m
          script: |
            set -euo pipefail
            LINES="${{ inputs.lines }}"
            OUTDIR="$HOME/worker-logs"
            rm -rf "$OUTDIR" && mkdir -p "$OUTDIR"

            systemctl list-units 'explorertoken-chain@*.service' --no-legend --no-pager \
              | awk '{print $1}' | sed 's/.service$//' \
              | while read -r unit; do
                  echo "Collecting $unit ..."
                  journalctl -u "$unit" -n "$LINES" --no-pager > "$OUTDIR/${unit}.log" || true
                done

            ls -la "$OUTDIR"

      - name: SCP: retrieve logs
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT != '' && secrets.SSH_PORT || '22' }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "worker-logs/*"
          target: "./"

      - name: Upload logs artifact
        uses: actions/upload-artifact@v4
        with:
          name: worker-logs
          path: worker-logs
